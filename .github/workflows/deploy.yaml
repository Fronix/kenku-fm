name: Deploy Kenku FM (Windows Only)

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    env:
      NODE_VERSION: 20.9.0
      CASTLABS_ACCOUNT_NAME: ${{ secrets.CASTLABS_ACCOUNT_NAME }}
      CASTLABS_ACCOUNT_PASSWORD: ${{ secrets.CASTLABS_ACCOUNT_PASSWORD }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Publish package
        run: yarn run publish

      - name: Build package
        run: yarn run make

      - name: Install Python and Widevine
        shell: pwsh
        run: |
          choco install python --version=3.11.8
          python -m pip install --upgrade pip
          python -m pip install castlabs-evs

      - name: Sign Electron App
        shell: pwsh
        run: |
          $arch = "x64"
          python -m castlabs_evs.account -n reauth -A $env:CASTLABS_ACCOUNT_NAME -P $env:CASTLABS_ACCOUNT_PASSWORD
          python -m castlabs_evs.vmp sign-pkg "out\Kenku FM-win32-$arch"

      - name: Package and Publish
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $arch = "x64"
          $version = "${{ github.ref_name }}"

          yarn --cwd ./publish/windows install --frozen-lockfile
          node ./publish/windows/index.js ./ $version not_used

          $releaseId = ./publish/script-get-github-release.sh $version $env:GITHUB_TOKEN
          ./publish/script-win.sh "./out/windows/kenku-fm-$version-win32-$arch.exe" $env:GITHUB_TOKEN $releaseId "kenku-fm-$version-win32-$arch.exe"
          ./publish/script-win.sh "./out/windows/kenku-fm-$version-full.nupkg" $env:GITHUB_TOKEN $releaseId "kenku-fm-$version-full.nupkg"
          ./publish/script-win.sh "./out/windows/RELEASES" $env:GITHUB_TOKEN $releaseId "RELEASES"
